// Code generated by MockGen. DO NOT EDIT.
// Source: shared/vendors/shipping/client/client.go

// Package client is a generated GoMock package.
package client

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entities "github.com/nurdsoft/nurd-commerce-core/shared/vendors/shipping/entities"
)

// MockClient is a mock of Client interface.
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
}

// MockClientMockRecorder is the mock recorder for MockClient.
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance.
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// GetShippingRates mocks base method.
func (m *MockClient) GetShippingRates(ctx context.Context, shipment entities.Shipment) ([]entities.ShippingRate, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetShippingRates", ctx, shipment)
	ret0, _ := ret[0].([]entities.ShippingRate)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetShippingRates indicates an expected call of GetShippingRates.
func (mr *MockClientMockRecorder) GetShippingRates(ctx, shipment interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetShippingRates", reflect.TypeOf((*MockClient)(nil).GetShippingRates), ctx, shipment)
}

// ValidateAddress mocks base method.
func (m *MockClient) ValidateAddress(ctx context.Context, address entities.Address) (*entities.Address, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateAddress", ctx, address)
	ret0, _ := ret[0].(*entities.Address)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateAddress indicates an expected call of ValidateAddress.
func (mr *MockClientMockRecorder) ValidateAddress(ctx, address interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateAddress", reflect.TypeOf((*MockClient)(nil).ValidateAddress), ctx, address)
}
